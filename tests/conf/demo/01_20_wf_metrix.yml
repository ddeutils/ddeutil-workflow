wf-run-matrix:
  type: Workflow
  params:
    source: str
    target: str
  jobs:
    multiple-system:
      strategy:
        max-parallel: 1
        fail-fast: true
        matrix:
          table: ['customer', 'sales']
          system: ['csv']
          partition: [1, 2, 3]
        exclude:
          - table: customer
            system: csv
            partition: 1
          - table: sales
            partition: 3
        include:
          - table: customer
            system: csv
            partition: 4
      stages:
        - name: Extract & Load Multi-System
          uses: tasks/el-${{ matrix.system }}-to-parquet@polars-dir
          id: ${{ matrix.table }}-${{ matrix.partition }}
          with:
            source:
              conn: ${{ params.source }}
              table: ${{ matrix.table }}
            sink:
              conn: ${{ params.target }}
              endpoint: /raw/${{ matrix.table }}_${{ matrix.system }}

        - name: End Stage
          id: end-stage
          run: |
            passing_value: int = 10


wf-run-matrix-parallel:
  type: Workflow
  params:
    source: str
    target: str
  jobs:
    multiple-system:
      strategy:
        max-parallel: 4
        fail-fast: true
        matrix:
          table: ['customer', 'sales']
          system: ['csv']
          partition: [1, 2, 3]
        exclude:
          - table: customer
            system: csv
            partition: 1
          - table: sales
            partition: 3
        include:
          - table: customer
            system: csv
            partition: 4
      stages:
        - name: Extract & Load Multi-System
          uses: tasks/el-${{ matrix.system }}-to-parquet@polars-dir
          id: ${{ matrix.table }}-${{ matrix.partition }}
          with:
            source:
              conn: ${{ params.source }}
              table: ${{ matrix.table }}
            sink:
              conn: ${{ params.target }}
              endpoint: /raw/${{ matrix.table }}_${{ matrix.system }}

        - name: End Stage
          id: end-stage
          run: |
            passing_value: int = 10

wf-run-matrix-raise:
  type: Workflow
  on:
    - 'every_2_minute_bkk'
  params:
    name: str
  jobs:
    multiple-system:
      strategy:
        max-parallel: 4
        fail-fast: false
        matrix:
          table: [ 'customer', 'sales' ]
          system: [ 'csv' ]
          partition: [ 1, 2, 3 ]
        exclude:
          - table: customer
            system: csv
            partition: 1
          - table: sales
            partition: 3
        include:
          - table: customer
            system: csv
            partition: 4
      stages:
        - name: Extract & Load Multi-System
          run: |
            if ${{ matrix.partition }} == 1:
              raise ValueError('Value of partition matrix was equaled 1.')


wf-run-matrix-fail-fast:
  type: Workflow
  on:
    - cronjob: '* * * * *'
      timezone: "Asia/Bangkok"
    - 'every_2_minute_bkk'
  params:
    name: str
  jobs:
    multiple-system:
      strategy:
        max-parallel: 4
        fail-fast: true
        matrix:
          table: [ 'customer', 'sales' ]
          system: [ 'csv' ]
          partition: [ 1, 2, 3 ]
        exclude:
          - table: customer
            system: csv
            partition: 1
          - table: sales
            partition: 3
        include:
          - table: customer
            system: csv
            partition: 4
      stages:
        - name: Extract & Load Multi-System
          run: |
            if ${{ matrix.partition }} == 1:
              raise ValueError('Value of partition matrix was equaled 1.')
